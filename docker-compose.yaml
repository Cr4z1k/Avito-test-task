# name: avito-banner-service

# version: '3.9'
# services:
#   backend:
#     container_name: avito-backend
#     build: ./
#     ports:
#       - '8000:8080'
#     environment:
#       - POSTGRES_PASSWORD=${DB_PASS}
#     depends_on:
#       db:
#         condition: service_healthy
#     networks:
#       - avito-network

#   db:
#     image: postgres:latest
#     container_name: pg_database
#     restart: always
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     expose:
#       - 5432
#     environment:
#       - POSTGRES_USER=${DB_USER}
#       - POSTGRES_PASSWORD=${DB_PASS}
#       - POSTGRES_DB=${DB_NAME}
#     healthcheck:
#       test: ["CMD", "pg_isready -U ${DB_USER}"]
#       interval: 30s
#       timeout: 5s
#       retries: 5
#     networks:
#       - avito-network

# volumes:
#   db-data:
#     driver: local

# networks:
#   avito-network:
#     driver: bridge

version: '3.9'
services:
  backend:
    container_name: avito-backend
    build: ./
    ports:
      - '8000:8080'
    environment:
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - avito-network

  db:
    image: postgres:latest
    container_name: pg_database
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - avito-network

volumes:
  db-data:
    driver: local

networks:
  avito-network:
    driver: bridge